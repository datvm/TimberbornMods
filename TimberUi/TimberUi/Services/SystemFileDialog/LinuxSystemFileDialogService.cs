using System.Diagnostics;

namespace TimberUi.Services.SystemFileDialog;

public class LinuxSystemFileDialogService : ISystemFileDialogService
{
    public string? ShowOpenFileDialog(string? filter = default)
    {
        string? result = TryZenityOpenDialog(filter) ?? TryKDialogOpenDialog(filter);
        return string.IsNullOrWhiteSpace(result) ? null : result.Trim();
    }

    public string? ShowSaveFileDialog(string? filter = default)
    {
        string? result = TryZenitySaveDialog(filter) ?? TryKDialogSaveDialog(filter);
        return string.IsNullOrWhiteSpace(result) ? null : result.Trim();
    }

    // WARNING: Code generated by AI and is not tested

    // --- Internal methods ---

    string? TryZenityOpenDialog(string? filter)
    {
        string zenityPath = "/usr/bin/zenity";
        if (!File.Exists(zenityPath)) return null;

        string args = "--file-selection";
        if (!string.IsNullOrEmpty(filter))
            args += " " + BuildZenityFileFilter(filter);

        return RunProcess(zenityPath, args);
    }

    string? TryZenitySaveDialog(string? filter)
    {
        string zenityPath = "/usr/bin/zenity";
        if (!File.Exists(zenityPath)) return null;

        string args = "--file-selection --save --confirm-overwrite";
        if (!string.IsNullOrEmpty(filter))
            args += " " + BuildZenityFileFilter(filter);

        return RunProcess(zenityPath, args);
    }

    string? TryKDialogOpenDialog(string? filter)
    {
        string kdialogPath = "/usr/bin/kdialog";
        if (!File.Exists(kdialogPath)) return null;

        string args = "--getopenfilename";
        if (!string.IsNullOrEmpty(filter))
            args += " " + BuildKDialogFileFilter(filter);

        return RunProcess(kdialogPath, args);
    }

    string? TryKDialogSaveDialog(string? filter)
    {
        string kdialogPath = "/usr/bin/kdialog";
        if (!File.Exists(kdialogPath)) return null;

        string args = "--getsavefilename";
        if (!string.IsNullOrEmpty(filter))
            args += " " + BuildKDialogFileFilter(filter);

        return RunProcess(kdialogPath, args);
    }

    // --- Helpers ---

    static string? RunProcess(string fileName, string args)
    {
        var psi = new ProcessStartInfo
        {
            FileName = fileName,
            Arguments = args,
            RedirectStandardOutput = true,
            UseShellExecute = false,
            CreateNoWindow = true
        };

        try
        {
            using var proc = Process.Start(psi);
            string? output = proc?.StandardOutput.ReadLine();
            proc?.WaitForExit();
            // zenity returns exit code 1 on cancel; output will be empty/null.
            if (proc != null && proc.ExitCode == 0)
                return output;
        }
        catch
        {
            // Fallback if something goes wrong (app not installed etc)
        }
        return null;
    }

    static string BuildZenityFileFilter(string filter)
    {
        // zenity uses: --file-filter="Name | *.ext *.ext2"
        // We'll use "Supported files" as the label.
        var exts = filter.Split(new[] { ';' }, StringSplitOptions.RemoveEmptyEntries)
                         .Select(ext => ext.StartsWith(".") ? "*" + ext : "*." + ext)
                         .ToArray();
        if (exts.Length == 0) return "";
        return $"--file-filter=\"Supported files | {string.Join(" ", exts)}\"";
    }

    static string BuildKDialogFileFilter(string filter)
    {
        // kdialog uses: '*.ext *.ext2|Description'
        var exts = filter.Split(new[] { ';' }, StringSplitOptions.RemoveEmptyEntries)
                         .Select(ext => ext.StartsWith(".") ? "*" + ext : "*." + ext)
                         .ToArray();
        if (exts.Length == 0) return "";
        return $"\"{string.Join(" ", exts)}|Supported files\"";
    }
}
